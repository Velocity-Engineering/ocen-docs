"use strict";(self.webpackChunkocen=self.webpackChunkocen||[]).push([[4467],{3905:(t,e,n)=>{n.d(e,{Zo:()=>d,kt:()=>m});var i=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}function l(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,i,r=function(t,e){if(null==t)return{};var n,i,r={},a=Object.keys(t);for(i=0;i<a.length;i++)n=a[i],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(i=0;i<a.length;i++)n=a[i],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var s=i.createContext({}),p=function(t){var e=i.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):l(l({},e),t)),n},d=function(t){var e=p(t.components);return i.createElement(s.Provider,{value:e},t.children)},y="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return i.createElement(i.Fragment,{},e)}},c=i.forwardRef((function(t,e){var n=t.components,r=t.mdxType,a=t.originalType,s=t.parentName,d=o(t,["components","mdxType","originalType","parentName"]),y=p(n),c=r,m=y["".concat(s,".").concat(c)]||y[c]||u[c]||a;return n?i.createElement(m,l(l({ref:e},d),{},{components:n})):i.createElement(m,l({ref:e},d))}));function m(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var a=n.length,l=new Array(a);l[0]=c;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=t,o[y]="string"==typeof t?t:r,l[1]=o;for(var p=2;p<a;p++)l[p]=n[p];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}c.displayName="MDXCreateElement"},40090:(t,e,n)=>{n.r(e),n.d(e,{contentTitle:()=>l,default:()=>y,frontMatter:()=>a,metadata:()=>o,toc:()=>s});var i=n(87462),r=(n(67294),n(3905));const a={},l="lookup query for entities",o={type:"api",id:"lookup-query-for-entities",unversionedId:"lookup-query-for-entities",title:"lookup query for entities",description:"",slug:"/lookup-query-for-entities",frontMatter:{},api:{tags:["Paticipant Registry"],operationId:"entityLookup",parameters:[{name:"Signature",in:"header",required:!0,description:"Detached JWS of the body. This is the digital signature of the request body signed using the signing private key of the caller. For bodyless request JWS of path should be provided, <br />e.g. for API ```GET /v1/{type}/{id}```, JWS of ```/{type}/{id}```",schema:{type:"string",format:"byte"}},{name:"type",in:"path",description:"Type of the entity e.g. Borrower Agent(BA), Lender, Data Provider",schema:{type:"string",enum:["BA","lender","data-provider"]},example:"BA",required:!0}],requestBody:{description:"Query BA, lender, data-provider using properties",content:{"application/json":{schema:{type:"object",properties:{name:{type:"string"},version:{type:"string"},baseUrl:{type:"string"},size:{type:"integer",example:100,description:"maximum number of elements in a page."},page:{type:"integer",example:0,description:"page number, default is 0"},id:{type:"string",format:"uuid",description:"id of the entity"},status:{type:"string",enum:["ACTIVE","BLOCKED","INACTIVE"]}}}}}},responses:{200:{description:"Acknowledgement of Request Received",content:{"application/json":{schema:{type:"object",properties:{content:{anyOf:[{type:"array",items:{type:"object",properties:{createdOn:{type:"string",format:"timestamp"},updatedOn:{type:"string",format:"timestamp"},id:{type:"string",format:"uuid",description:"id of the entity"},type:{type:"string",description:"type of the entity",enum:["BA","lender","data-provider"]},status:{type:"string",enum:["ACTIVE","BLOCKED","INACTIVE"]},version:{type:"string"},name:{type:"string"},baseUrl:{type:"string",description:"base url of the module in eco-system. The typical format of a baseUrl is as follows.<br /> ``` <fqdn>.<extension> ``` where, <br/> <table> <thead> <tr> <td>Key</th> <td>Description</th> </tr> </thead> <tbody> <tr> <td>fqdn</th> <td>Fully qualified domain name</th> </tr> <tr> <td>extn</td> <td>Domain Extension</td> </tr> </tbody> </table> The domain name of the subscriber must be an ```https``` domain with a TLD extension and a valid SSL certificate from a trusted certificate authority",example:"https://BA.company.com"},ips:{type:"array",items:{type:"string"},example:["203.34.12.3","203.34.12.4"]},inboundPorts:{type:"array",items:{type:"string"},example:["80","45"]},outboundPorts:{type:"array",items:{type:"string"},example:["80","45"]},certificate:{type:"object",description:"Public certificate of the entity in UHI eco-system",properties:{kty:{type:"string",example:"RSA",description:"Key Type Parameter"},kid:{type:"string",example:"5ebd671b-762c-49b0-99ce-65642b113d7b",description:"Public Key Use Parameter"},use:{type:"string",example:"sig",description:"The use member identifies the intended use of the key"},alg:{type:"string",example:"RS256",description:"algorithm"},n:{type:"string",example:"gU8PDUSzaHtMOYJd9NDLJ-2dAE1lXUCgZK-N6y9vRDCurscfQlTHKZliBbhiEsMCk70_nbDie6YKXWavJKj0X4nzoa1H7jrRjKa7R80BlqtSKl95TuynUChrHvvsvcjDSXp4d4PCNZ0Hdp7j0K-QSiR4OHGb3Irm9vgv3tPdh00ijPwqFJRFSkofFiUSRp-7BXWQXvnnH0sEIMvGjCxj4hAz3J35X5KPfRaax5MCQPr1-WkOgGYvpNPaDjSjsvhtOZQMcmvy_AaoRk6FADHkIRJU14dzw9alI4dp5Yp52CRg-bPDYReQe4e3j4I8DP3i0JTkV_fJOgDKPnFpRDmDNw",description:"The modulus of key datas"},e:{type:"string",example:"AQAB",description:"The public exponent of key data"}}}}}},{type:"array",items:{type:"object",properties:{schemaIds:{type:"array",description:"Supported schemaId and versions by Data-Provider",items:{type:"object",properties:{versions:{type:"array",items:{type:"string"},example:["1.0.0","1.0.2"]},schemaId:{type:"string",format:"uuid"}}}},version:{type:"string"},name:{type:"string"},baseUrl:{type:"string",description:"base url of the module in eco-system. The typical format of a baseUrl is as follows.<br /> ``` <fqdn>.<extension> ``` where, <br/> <table> <thead> <tr> <td>Key</th> <td>Description</th> </tr> </thead> <tbody> <tr> <td>fqdn</th> <td>Fully qualified domain name</th> </tr> <tr> <td>extn</td> <td>Domain Extension</td> </tr> </tbody> </table> The domain name of the subscriber must be an ```https``` domain with a TLD extension and a valid SSL certificate from a trusted certificate authority",example:"https://BA.company.com"},ips:{type:"array",items:{type:"string"},example:["203.34.12.3","203.34.12.4"]},inboundPorts:{type:"array",items:{type:"string"},example:["80","45"]},outboundPorts:{type:"array",items:{type:"string"},example:["80","45"]},certificate:{type:"object",description:"Public certificate of the entity in UHI eco-system",properties:{kty:{type:"string",example:"RSA",description:"Key Type Parameter"},kid:{type:"string",example:"5ebd671b-762c-49b0-99ce-65642b113d7b",description:"Public Key Use Parameter"},use:{type:"string",example:"sig",description:"The use member identifies the intended use of the key"},alg:{type:"string",example:"RS256",description:"algorithm"},n:{type:"string",example:"gU8PDUSzaHtMOYJd9NDLJ-2dAE1lXUCgZK-N6y9vRDCurscfQlTHKZliBbhiEsMCk70_nbDie6YKXWavJKj0X4nzoa1H7jrRjKa7R80BlqtSKl95TuynUChrHvvsvcjDSXp4d4PCNZ0Hdp7j0K-QSiR4OHGb3Irm9vgv3tPdh00ijPwqFJRFSkofFiUSRp-7BXWQXvnnH0sEIMvGjCxj4hAz3J35X5KPfRaax5MCQPr1-WkOgGYvpNPaDjSjsvhtOZQMcmvy_AaoRk6FADHkIRJU14dzw9alI4dp5Yp52CRg-bPDYReQe4e3j4I8DP3i0JTkV_fJOgDKPnFpRDmDNw",description:"The modulus of key datas"},e:{type:"string",example:"AQAB",description:"The public exponent of key data"}}}},required:["version","name","baseUrl","ips","inboundPorts","outboundPorts","certificate","schemaIds"]}}]},number:{type:"integer",description:"index of page"},size:{type:"integer"},totalElements:{type:"integer",description:"total number of elementes found for given query"},totalPages:{type:"integer"},last:{type:"boolean",description:"true if this is last page"},numberOfElements:{type:"integer"},first:{type:"boolean",description:"true if this is first page"}}}}}},400:{description:"Invalid request"},404:{description:"Not found"}},description:"lookup query for entities",method:"post",path:"/participantRegistry/{type}/lookup",security:[{bearerAuth:[]},{oAuth2Client:[]}],securitySchemes:{bearerAuth:{type:"http",scheme:"bearer",bearerFormat:"JWT"},oAuth2Client:{type:"oauth2",flows:{clientCredentials:{tokenUrl:"https://ocen.com/auth/oauth2/token/",scopes:{}}}}},jsonRequestBodyExample:{name:"string",version:"string",baseUrl:"string",size:100,page:0,id:"3fa85f64-5717-4562-b3fc-2c963f66afa6",status:"ACTIVE"},info:{version:"1.0.0",title:"Paticipant Registry",contact:{email:"community@ispirt.in",url:"https://ispirt.in/"}},postman:{name:"lookup query for entities",description:{type:"text/plain"},url:{path:["participantRegistry",":type","lookup"],host:["{{baseUrl}}"],query:[],variable:[{description:{content:"(Required) Type of the entity e.g. Borrower Agent(BA), Lender, Data Provider",type:"text/plain"},type:"any",value:"<string>",key:"type"}]},header:[{description:{content:"(Required) Detached JWS of the body. This is the digital signature of the request body signed using the signing private key of the caller. For bodyless request JWS of path should be provided, <br />e.g. for API ```GET /v1/{type}/{id}```, JWS of ```/{type}/{id}```",type:"text/plain"},key:"Signature",value:"<byte>"},{key:"Content-Type",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'{\n    "name": "<string>",\n    "version": "<string>",\n    "baseUrl": "<string>",\n    "size": "<integer>",\n    "page": "<integer>",\n    "id": "<uuid>",\n    "status": "<string>"\n}'}}},source:"@site/apis/participants.json",sourceDirName:".",permalink:"/apis/lookup-query-for-entities",next:{title:"Create Loan Applications Request",permalink:"/apis/create-loan-applications-request"}},s=[],p={toc:s},d="wrapper";function y(t){let{components:e,...n}=t;return(0,r.kt)(d,(0,i.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"lookup-query-for-entities"},"lookup query for entities"),(0,r.kt)("p",null,"lookup query for entities"),(0,r.kt)("table",{style:{display:"table",width:"100%"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Path Parameters"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"type"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Possible values:")," ","[",(0,r.kt)("inlineCode",{parentName:"p"},"BA"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"lender"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"data-provider"),"]")),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"Type of the entity e.g. Borrower Agent(BA), Lender, Data Provider")),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: BA"))))),(0,r.kt)("table",{style:{display:"table",width:"100%"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Header Parameters"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"Signature"),(0,r.kt)("span",{style:{opacity:"0.6"}}," byte"),(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"Detached JWS of the body. This is the digital signature of the request body signed using the signing private key of the caller. For bodyless request JWS of path should be provided, ",(0,r.kt)("br",null),"e.g. for API ",(0,r.kt)("inlineCode",{parentName:"p"},"GET /v1/{type}/{id}"),", JWS of ",(0,r.kt)("inlineCode",{parentName:"p"},"/{type}/{id}"))))))),(0,r.kt)("table",{style:{display:"table",width:"100%"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Request Body ",(0,r.kt)("div",null,(0,r.kt)("p",null,"Query BA, lender, data-provider using properties"))))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"name"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"version"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"baseUrl"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"size"),(0,r.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"maximum number of elements in a page.")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"page"),(0,r.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"page number, default is 0")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"id"),(0,r.kt)("span",{style:{opacity:"0.6"}}," uuid"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"id of the entity")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"status"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Possible values:")," ","[",(0,r.kt)("inlineCode",{parentName:"p"},"ACTIVE"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"BLOCKED"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"INACTIVE"),"]")))))),(0,r.kt)("table",{style:{display:"table",width:"100%"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Responses"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("div",{style:{display:"flex"}},(0,r.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,r.kt)("code",null,"200")),(0,r.kt)("div",null,(0,r.kt)("p",null,"Acknowledgement of Request Received"))),(0,r.kt)("div",null,(0,r.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Schema ",(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"}}," OPTIONAL"),(0,r.kt)("div",null)))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"content"),(0,r.kt)("span",{style:{opacity:"0.6"}}," "),(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"}}," OPTIONAL"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"number"),(0,r.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"}}," OPTIONAL"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"index of page")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"size"),(0,r.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"}}," OPTIONAL"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"totalElements"),(0,r.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"}}," OPTIONAL"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"total number of elementes found for given query")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"totalPages"),(0,r.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"}}," OPTIONAL"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"last"),(0,r.kt)("span",{style:{opacity:"0.6"}}," boolean"),(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"}}," OPTIONAL"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"true if this is last page")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"numberOfElements"),(0,r.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"}}," OPTIONAL"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"first"),(0,r.kt)("span",{style:{opacity:"0.6"}}," boolean"),(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"}}," OPTIONAL"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"true if this is first page"))))))))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("div",{style:{display:"flex"}},(0,r.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,r.kt)("code",null,"400")),(0,r.kt)("div",null,(0,r.kt)("p",null,"Invalid request"))),(0,r.kt)("div",null))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("div",{style:{display:"flex"}},(0,r.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,r.kt)("code",null,"404")),(0,r.kt)("div",null,(0,r.kt)("p",null,"Not found"))),(0,r.kt)("div",null))))))}y.isMDXComponent=!0}}]);